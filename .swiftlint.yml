included:
  - Sources
  - Tests
excluded:
  - Tests/FirebladeECSTests
opt_in_rules:
  #- file_header
  - array_init
  - attributes
  - closure_end_indentation
  - closure_spacing
  - conditional_returns_on_newline
  - contains_over_first_not_nil
  - empty_count
  - explicit_enum_raw_value
  - explicit_init
  - explicit_top_level_acl
  - explicit_type_interface
  - extension_access_modifier
  - fatal_error_message
  - first_where
  - force_unwrapping
  - implicit_return
  - implicitly_unwrapped_optional
  - joined_default_parameter
  - let_var_whitespace
  - literal_expression_end_indentation
  - multiline_arguments
  - multiline_parameters
  - nimble_operator
  #- no_extension_access_modifier
  #- no_grouping_extension
  - number_separator
  - object_literal
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - private_outlet
  - prohibited_super_call
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - redundant_nil_coalescing
  - single_test_class
  - sorted_first_last
  - sorted_imports
  - strict_fileprivate
  - switch_case_on_newline
  - trailing_closure
  - unneeded_parentheses_in_closure_argument
  - vertical_parameter_alignment_on_call

file_header:
  required_pattern: |
                    \/\/
                    \/\/  .*?\.swift
                    \/\/  FirebladeECS
                    \/\/
                    \/\/  Created by .*? on \d{1,2}\/\d{1,2}\/\d{2}\.
                    \/\/  Copyright Â© \d{4} Realm\. All rights reserved\.
                    \/\/
identifier_name:
  excluded:
    - id
line_length: 220
number_separator:
  minimum_length: 5

custom_rules:
  rule_id:
    included: Source/SwiftLintFramework/Rules/\w+\.swift
    name: Rule ID
    message: Rule IDs must be all lowercase, snake case and not end with `rule`
    regex: identifier:\s*("\w+_rule"|"\S*[^a-z_]\S*")
    severity: error
  fatal_error:
    name: Fatal Error
    excluded: "Tests/*"
    message: Prefer using `queuedFatalError` over `fatalError` to avoid leaking compiler host machine paths.
    regex: \bfatalError\b
    match_kinds:
      - identifier
    severity: error
